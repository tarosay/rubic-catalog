Ext.data.JsonP.Peridot_SPIMaster({"tagname":"class","name":"Peridot.SPIMaster","autodetected":{"aliases":true,"alternateClassNames":true,"extends":true,"mixins":true,"requires":true,"uses":true,"members":true,"code_type":true},"files":[{"filename":"spimaster.js","href":null}],"aliases":{},"alternateClassNames":[],"extends":"Hardware.SPIMaster","mixins":[],"requires":[],"uses":[],"members":[{"name":"channel","tagname":"property","owner":"Hardware.SPIMaster","id":"property-channel","meta":{"readonly":true}},{"name":"clock","tagname":"property","owner":"Hardware.SPIMaster","id":"property-clock","meta":{}},{"name":"mode","tagname":"property","owner":"Hardware.SPIMaster","id":"property-mode","meta":{}},{"name":"msb_first","tagname":"property","owner":"Hardware.SPIMaster","id":"property-msb_first","meta":{}},{"name":"configure","tagname":"method","owner":"Hardware.SPIMaster","id":"method-configure","meta":{"chainable":true}},{"name":"recv","tagname":"method","owner":"Hardware.SPIMaster","id":"method-recv","meta":{}},{"name":"send","tagname":"method","owner":"Hardware.SPIMaster","id":"method-send","meta":{}},{"name":"transfer","tagname":"method","owner":"Hardware.SPIMaster","id":"method-transfer","meta":{}},{"name":"new","tagname":"method","owner":"Peridot.SPIMaster","id":"static-method-new","meta":{"static":true}}],"code_type":"ext_define","id":"class-Peridot.SPIMaster","component":false,"superclasses":["Hardware.SPIMaster"],"subclasses":[],"mixedInto":[],"parentMixins":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'><a href='#!/api/Hardware.SPIMaster' rel='Hardware.SPIMaster' class='docClass'>Hardware.SPIMaster</a><div class='subclass '><strong>Peridot.SPIMaster</strong></div></div></pre><div class='doc-contents'><p>SPI(Serial Peripheral Interface)のマスター側コントローラを操作するクラスです。</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-channel' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Hardware.SPIMaster' rel='Hardware.SPIMaster' class='defined-in docClass'>Hardware.SPIMaster</a><br/></div><a href='#!/api/Hardware.SPIMaster-property-channel' class='name expandable'>channel</a> : <a href=\"#!/api/Integer\" rel=\"Integer\" class=\"docClass\">Integer</a><span class=\"signature\"><span class='readonly' >readonly</span></span></div><div class='description'><div class='short'><p>このインスタンスが割り当てられたコントローラのチャンネル番号を取得します。</p>\n</div><div class='long'><p>このインスタンスが割り当てられたコントローラのチャンネル番号を取得します。</p>\n</div></div></div><div id='property-clock' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Hardware.SPIMaster' rel='Hardware.SPIMaster' class='defined-in docClass'>Hardware.SPIMaster</a><br/></div><a href='#!/api/Hardware.SPIMaster-property-clock' class='name expandable'>clock</a> : <a href=\"#!/api/Integer\" rel=\"Integer\" class=\"docClass\">Integer</a><span class=\"signature\"></span></div><div class='description'><div class='short'>クロック周波数をHz単位で取得/設定します。 ...</div><div class='long'><p>クロック周波数をHz単位で取得/設定します。\n設定時は、コントローラが許容できるクロック周波数に合わせて、\n代入した値を越えない最も近い値に補正されることがあります。\n取得時は、コントローラに設定された実際のクロック周波数が返ります。</p>\n<p>Defaults to: <code>100000</code></p></div></div></div><div id='property-mode' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Hardware.SPIMaster' rel='Hardware.SPIMaster' class='defined-in docClass'>Hardware.SPIMaster</a><br/></div><a href='#!/api/Hardware.SPIMaster-property-mode' class='name expandable'>mode</a> : <a href=\"#!/api/Integer\" rel=\"Integer\" class=\"docClass\">Integer</a><span class=\"signature\"></span></div><div class='description'><div class='short'>SPIの通信モードを取得/設定します。以下の4つのうちいずれか1つです。 ...</div><div class='long'><p>SPIの通信モードを取得/設定します。以下の4つのうちいずれか1つです。</p>\n\n<ul>\n<li>0 : 正パルス、ラッチ先行</li>\n<li>1 : 正パルス、シフト先行</li>\n<li>2 : 負パルス、ラッチ先行</li>\n<li>3 : 負パルス、シフト先行</li>\n</ul>\n\n<p>Defaults to: <code>0</code></p></div></div></div><div id='property-msb_first' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Hardware.SPIMaster' rel='Hardware.SPIMaster' class='defined-in docClass'>Hardware.SPIMaster</a><br/></div><a href='#!/api/Hardware.SPIMaster-property-msb_first' class='name expandable'>msb_first</a> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a><span class=\"signature\"></span></div><div class='description'><div class='short'>MSBファーストで通信するかどうかを取得/設定します。 ...</div><div class='long'><p>MSBファーストで通信するかどうかを取得/設定します。</p>\n\n<ul>\n<li>true : MSBファースト</li>\n<li>false : LSBファースト</li>\n</ul>\n\n<p>Defaults to: <code>true</code></p></div></div></div></div></div><div class='members-section'><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Instance methods</h3><div id='method-configure' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Hardware.SPIMaster' rel='Hardware.SPIMaster' class='defined-in docClass'>Hardware.SPIMaster</a><br/></div><a href='#!/api/Hardware.SPIMaster-method-configure' class='name expandable'>configure</a>( <span class='pre'>sck, miso, mosi, [ss]</span> ) : <a href=\"#!/api/Hardware.SPIMaster\" rel=\"Hardware.SPIMaster\" class=\"docClass\">Hardware.SPIMaster</a><span class=\"signature\"><span class='chainable' >chainable</span></span></div><div class='description'><div class='short'>ピン割り当てを行います。 ...</div><div class='long'><p>ピン割り当てを行います。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>sck</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Symbol\" rel=\"Symbol\" class=\"docClass\">Symbol</a>/<a href=\"#!/api/Integer\" rel=\"Integer\" class=\"docClass\">Integer</a><div class='sub-desc'><p>クロック信号(SCK)の名称(例:\"D13\")または番号(例:13)。</p>\n</div></li><li><span class='pre'>miso</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Symbol\" rel=\"Symbol\" class=\"docClass\">Symbol</a>/<a href=\"#!/api/Integer\" rel=\"Integer\" class=\"docClass\">Integer</a><div class='sub-desc'><p>マスター入力信号(MISO)の名称(例:\"D12\")または番号(例:12)。</p>\n</div></li><li><span class='pre'>mosi</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Symbol\" rel=\"Symbol\" class=\"docClass\">Symbol</a>/<a href=\"#!/api/Integer\" rel=\"Integer\" class=\"docClass\">Integer</a><div class='sub-desc'><p>マスター出力信号(MOSI)の名称(例:\"D11\")または番号(例:11)。</p>\n</div></li><li><span class='pre'>ss</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Symbol\" rel=\"Symbol\" class=\"docClass\">Symbol</a>/<a href=\"#!/api/Integer\" rel=\"Integer\" class=\"docClass\">Integer</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]/<a href=\"#!/api/Symbol\" rel=\"Symbol\" class=\"docClass\">Symbol</a>[]/<a href=\"#!/api/Integer\" rel=\"Integer\" class=\"docClass\">Integer</a>[] (optional)<div class='sub-desc'><p>負論理スレーブ選択信号の名称(例:\"D10\")または番号(例:10)。複数のスレーブを接続する場合、名称または番号の配列を与えることもできます。\n       省略時はスレーブ選択信号を持たない1つのスレーブが接続されているものと見なします。</p>\n<p>Defaults to: <code>null</code></p></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Hardware.SPIMaster\" rel=\"Hardware.SPIMaster\" class=\"docClass\">Hardware.SPIMaster</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-recv' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Hardware.SPIMaster' rel='Hardware.SPIMaster' class='defined-in docClass'>Hardware.SPIMaster</a><br/></div><a href='#!/api/Hardware.SPIMaster-method-recv' class='name expandable'>recv</a>( <span class='pre'>rxbytes, [txfiller]</span> ) : <a href=\"#!/api/Integer\" rel=\"Integer\" class=\"docClass\">Integer</a>[]<span class=\"signature\"></span></div><div class='description'><div class='short'>データの受信を行います。 ...</div><div class='long'><p>データの受信を行います。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>rxbytes</span> : <a href=\"#!/api/Integer\" rel=\"Integer\" class=\"docClass\">Integer</a><div class='sub-desc'><p>受信するバイト数を指定します。</p>\n</div></li><li><span class='pre'>txfiller</span> : <a href=\"#!/api/Integer\" rel=\"Integer\" class=\"docClass\">Integer</a> (optional)<div class='sub-desc'><p>ダミーで送信されるバイトデータを指定します。</p>\n<p>Defaults to: <code>0xff</code></p></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Integer\" rel=\"Integer\" class=\"docClass\">Integer</a>[]</span><div class='sub-desc'><p>受信したバイト列。各要素が0以上255以内の数値で構成された配列が返ります。</p>\n</div></li></ul></div></div></div><div id='method-send' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Hardware.SPIMaster' rel='Hardware.SPIMaster' class='defined-in docClass'>Hardware.SPIMaster</a><br/></div><a href='#!/api/Hardware.SPIMaster-method-send' class='name expandable'>send</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>データの送受信を行います。transfer の別名です。 ...</div><div class='long'><p>データの送受信を行います。<a href=\"#!/api/Hardware.SPIMaster-method-transfer\" rel=\"Hardware.SPIMaster-method-transfer\" class=\"docClass\">transfer</a> の別名です。</p>\n</div></div></div><div id='method-transfer' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Hardware.SPIMaster' rel='Hardware.SPIMaster' class='defined-in docClass'>Hardware.SPIMaster</a><br/></div><a href='#!/api/Hardware.SPIMaster-method-transfer' class='name expandable'>transfer</a>( <span class='pre'>txdata, [rxoffset], [rxbytes], [txfiller], [slave]</span> ) : <a href=\"#!/api/Integer\" rel=\"Integer\" class=\"docClass\">Integer</a>[]<span class=\"signature\"></span></div><div class='description'><div class='short'>データの送受信を行います。 ...</div><div class='long'><p>データの送受信を行います。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>txdata</span> : <a href=\"#!/api/Integer\" rel=\"Integer\" class=\"docClass\">Integer</a>[]<div class='sub-desc'><p>送信するバイト列を指定します。各要素が0以上255以内の数値で構成された配列を渡します。</p>\n</div></li><li><span class='pre'>rxoffset</span> : <a href=\"#!/api/Integer\" rel=\"Integer\" class=\"docClass\">Integer</a> (optional)<div class='sub-desc'><p>送信を開始してから受信データの取り込みを開始するまでのバイト数を指定します。\n       0の場合、送信と同時に取り込みを開始します。負の値を指定すると、送信データの末端バイトを-1として逆順に数えます。</p>\n<p>Defaults to: <code>0</code></p></div></li><li><span class='pre'>rxbytes</span> : <a href=\"#!/api/Integer\" rel=\"Integer\" class=\"docClass\">Integer</a>/null (optional)<div class='sub-desc'><p>受信するバイト数を指定します。省略時やnullを指定した場合、送信終了と同時に取り込みを終了します。</p>\n<p>Defaults to: <code>null</code></p></div></li><li><span class='pre'>txfiller</span> : <a href=\"#!/api/Integer\" rel=\"Integer\" class=\"docClass\">Integer</a> (optional)<div class='sub-desc'><p>送信データを送り終わった後にも引き続き受信が必要な場合、ダミーで送信されるバイトデータを指定します。</p>\n<p>Defaults to: <code>0xff</code></p></div></li><li><span class='pre'>slave</span> : <a href=\"#!/api/Integer\" rel=\"Integer\" class=\"docClass\">Integer</a> (optional)<div class='sub-desc'><p>ピン割り当て時にスレーブを複数接続した場合、対象のスレーブを選択します。</p>\n<p>Defaults to: <code>0</code></p></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Integer\" rel=\"Integer\" class=\"docClass\">Integer</a>[]</span><div class='sub-desc'><p>受信したバイト列。各要素が0以上255以内の数値で構成された配列が返ります。</p>\n</div></li></ul></div></div></div></div><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Static methods</h3><div id='static-method-new' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Peridot.SPIMaster'>Peridot.SPIMaster</span><br/></div><a href='#!/api/Peridot.SPIMaster-static-method-new' class='name expandable'>new</a>( <span class='pre'></span> )<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>インスタンスを生成します。olive構成では、生成できるインスタンスは最大1個です。 ...</div><div class='long'><p>インスタンスを生成します。olive構成では、生成できるインスタンスは最大1個です。\n引数が渡された場合、それを用いて新しいインスタンスの <a href=\"#!/api/Peridot.SPIMaster-method-configure\" rel=\"Peridot.SPIMaster-method-configure\" class=\"docClass\">configure</a> を呼び出します。</p>\n</div></div></div></div></div></div></div>","meta":{}});